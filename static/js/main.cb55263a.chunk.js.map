{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","ExpenseDate","date","toLocaleString","month","day","year","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","getFullYear","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","Dummy__Expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb55263a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n    const dropdownChangeHandler = (e) => {\n        props.onChangeFilter(e.target.value);\n        \n    };\n\n    return (\n        <div className=\"expenses-filter\">\n            <div className=\"expenses-filter__control\">\n                <label>Filter by year</label>\n                <select value={props.selected} onChange={dropdownChangeHandler}>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport './ExpenseDate.css'\n\n\nfunction ExpenseDate(props) {\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{props.date.toLocaleString(\"en-US\", {month: \"long\"})}</div>\n            <div className=\"expense-date__day\">{props.date.toLocaleString(\"en-US\", {day: '2-digit'})}</div>\n            <div className=\"expense-date__year\">{props.date.toLocaleString(\"en-US\", {year: 'numeric'})}</div>\n        </div>\n    );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nexport default function ExpenseItem(props) {\n    return (\n        <li>\n            <Card className=\"expense-item\">\n                <ExpenseDate date={props.date} />\n                <div className=\"expense-item__description\">\n                    <h2>{props.title}</h2>\n                    <div className=\"expense-item__price\">${props.amount}</div>\n                </div>\n            </Card>\n        </li>\n    );\n}\n","import React from 'react'\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css'\n\nconst ExpensesList = (props) => {\n\n    if(props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>\n    } \n\n    return (\n        <ul className=\"expenses-list\">\n            {props.items.map((expense) => (\n            <ExpenseItem\n                key={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n            />\n        ))}\n        </ul>\n    )\n}\n\nexport default ExpensesList\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n\n    let barFillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n    }\n\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\n    const totalMaximum = Math.max(...dataPointValues)\n\n    return (\n        <div className=\"chart\">\n            {props.dataPoints.map((dataPoint) => (\n                <ChartBar\n                    key={dataPoint.label}\n                    value={dataPoint.value}\n                    maxValue={totalMaximum}\n                    label={dataPoint.label}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label: \"Jan\", value: 0 },\n        { label: \"Feb\", value: 0 },\n        { label: \"Mar\", value: 0 },\n        { label: \"Apr\", value: 0 },\n        { label: \"May\", value: 0 },\n        { label: \"Jun\", value: 0 },\n        { label: \"Jul\", value: 0 },\n        { label: \"Aug\", value: 0 },\n        { label: \"Sep\", value: 0 },\n        { label: \"Oct\", value: 0 },\n        { label: \"Nov\", value: 0 },\n        { label: \"Dec\", value: 0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount\n    }\n\n    return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n    const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    };\n\n    const filteredExpenses = props.items.filter((expense) => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    return (\n        <Card className=\"expenses\">\n            <ExpensesFilter\n                selected={filteredYear}\n                onChangeFilter={filterChangeHandler}\n            />\n            <ExpensesChart expenses={filteredExpenses} />\n            <ExpensesList items={filteredExpenses}/>\n        </Card>\n    );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\n    const [enteredDate, setEnteredDate] = useState(\"\");\n\n    const titleChangeHandler = (e) => {\n        setEnteredTitle(e.target.value);\n    };\n\n    const amountChangeHandler = (e) => {\n        setEnteredAmount(e.target.value);\n    };\n\n    const dateChangeHandler = (e) => {\n        setEnteredDate(e.target.value);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate),\n        };\n\n        props.onSaveExpenseData(expenseData);\n        setEnteredAmount(\"\");\n        setEnteredDate(\"\");\n        setEnteredTitle(\"\");\n    };\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        value={enteredTitle}\n                        onChange={titleChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input\n                        type=\"number\"\n                        min=\"0.01\"\n                        step=\"0.01\"\n                        onChange={amountChangeHandler}\n                        value={enteredAmount}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input\n                        type=\"date\"\n                        min=\"2021-01-01\"\n                        max=\"2022-12-31\"\n                        onChange={dateChangeHandler}\n                        value={enteredDate}\n                    />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString(),\n        };\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    };\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    };\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    };\n\n    return (\n        <div className=\"new-expense\">\n            {!isEditing && (\n                <button onClick={startEditingHandler}>Add New Expense</button>\n            )}\n\n            {isEditing && (\n                <ExpenseForm\n                    onCancel={stopEditingHandler}\n                    onSaveExpenseData={saveExpenseDataHandler}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default NewExpense;\n","import { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst Dummy__Expenses = [\n    {\n        id: \"e1\",\n        title: \"Toilet Paper\",\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    {\n        id: \"e2\",\n        title: \"New TV\",\n        amount: 799.49,\n        date: new Date(2021, 2, 12),\n    },\n    {\n        id: \"e3\",\n        title: \"Car Insurance\",\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: \"e4\",\n        title: \"New Desk (Wooden)\",\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n];\n\nfunction App() {\n\n    const [expenses, setExpenses] = useState(Dummy__Expenses)\n\n    const addExpenseHandler = expense => {\n        setExpenses(prevExpenses => {\n            return [expense, ...prevExpenses]\n        })\n    };\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler} />\n            <Expenses items={expenses} />\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}